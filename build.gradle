buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.0'
        classpath 'io.fabric.tools:gradle:1.22.1'
    }
}

apply plugin: "com.android.application"
apply plugin: 'io.fabric'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    signingConfigs {
        release {
            def signingFile = file("signing.properties")
            def fakeSigningFile = file("fakeSigning.properties")
            def signingProperties = new Properties()

            if (signingFile.exists()) {
                signingProperties.load(signingFile.newInputStream())
            } else {
                signingProperties.load(fakeSigningFile.newInputStream())
            }
            storeFile file(signingProperties["keystore.file"])
            storePassword signingProperties["keystore.password"]
            keyAlias signingProperties["key.alias"]
            keyPassword signingProperties["key.password"]
        }
    }



    defaultConfig {
        def versionMajor = 1
        def versionMinor = 4
        def versionPatch = 0

        versionName buildVersionName(versionMajor, versionMinor, versionPatch)
        versionCode buildVersionCode(versionMajor, versionMinor, versionPatch)

        minSdkVersion 14
        targetSdkVersion 25

        def apiFile = file("api.properties")
        def fakeApiFile = file("fakeApi.properties")
        def apiProperties = new Properties()

        if (apiFile.exists()) {
            apiProperties.load(apiFile.newInputStream())
        } else {
            apiProperties.load(fakeApiFile.newInputStream())
        }
        buildConfigField "String", "API_URL_AMAHI", formatStringField(apiProperties["url.amahi"])
        buildConfigField "String", "API_URL_PROXY", formatStringField(apiProperties["url.proxy"])
        buildConfigField "String", "API_CLIENT_ID", formatStringField(apiProperties["client.id"])
        buildConfigField "String", "API_CLIENT_SECRET", formatStringField(apiProperties["client.secret"])

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        betaRelease {
            signingConfig signingConfigs.debug
        }

        release {
            signingConfig signingConfigs.release
        }
    }

    android {
        lintOptions {
            abortOnError false
        }
    }
}

def buildVersionName(versionMajor, versionMinor, versionPatch) {
    return "${versionMajor}.${versionMinor}.${versionPatch}"
}

def buildVersionCode(versionMajor, versionMinor, versionPatch) {
    return versionMajor * 10**2 + versionMinor * 10**1 + versionPatch * 10**0
}

def formatStringField(field) {
    return "\"${field}\""
}

dependencies {
    repositories {
        mavenCentral()
        mavenLocal()
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'http://dl.bintray.com/megabitdragon/maven' }
    }

    def SUPPORT_LIBRARY_VERSION = "25.3.1"

    compile "com.android.support:support-v4:${SUPPORT_LIBRARY_VERSION}"
    compile "com.android.support:support-v13:${SUPPORT_LIBRARY_VERSION}"
    compile "com.android.support:recyclerview-v7:${SUPPORT_LIBRARY_VERSION}"
    compile "com.android.support:appcompat-v7:${SUPPORT_LIBRARY_VERSION}"
    compile "com.android.support:design:${SUPPORT_LIBRARY_VERSION}"
    compile "com.android.support:preference-v7:${SUPPORT_LIBRARY_VERSION}"
    compile "com.github.dmytrodanylyk.android-process-button:library:1.0.4"
    compile "com.jakewharton.timber:timber:4.5.1"
    compile "com.squareup.dagger:dagger:1.2.5"
    compile "com.squareup:otto:1.3.8"
    compile "com.squareup.picasso:picasso:2.5.2"
    compile "com.squareup.retrofit2:retrofit:2.2.0"
    compile 'com.squareup.retrofit2:converter-gson:2.2.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.6.0'
    compile "org.videolan:libvlc:2.1.1"
    compile('com.crashlytics.sdk.android:crashlytics:2.6.6@aar') {
        transitive = true;
    }
    provided "com.squareup.dagger:dagger-compiler:1.2.5"

    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support:support-annotations:25.3.1'
}

task generateWrapper(type: Wrapper) {
    description "Generates Gradle wrapper."

    gradleVersion = "2.2.1"
}

android.applicationVariants.all { variant ->
    def variantName = variant.name.capitalize()

    task("generate${variantName}Javadoc", type: Javadoc) {
        description "Generates ${variantName} documentation."

        source = files(variant.javaCompile.source)

        ext.androidClasspath = android.getBootClasspath().join(File.pathSeparator)
        classpath = files(variant.javaCompile.classpath, ext.androidClasspath)

        options {
            linksOffline "http://d.android.com/reference", "${android.sdkDirectory}/docs/reference"
        }
    }
}